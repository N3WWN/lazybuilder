---
# tasks for a mock build - only run under the mock tag
# This imports necessary vars and runs needed checks before continuing
- name: "Import el{{ major }} vars and perform checks"
  include_tasks: wrapper/mock/vars.yml
  tags:
    - mock

# This ensures that mock is setup properly, including the user, installed
# packages, and various directories we'll be using.
- name: "Ensure that {{ mock_builder }} is setup properly"
  include_tasks: wrapper/mock/setup.yml
  tags:
    - mock
    - module

# This section is for regular (non-module) builds
- name: Regular Build Block
  block:
    # This is currently a workaround for chains and modules
    - name: "Set a new var for the source name"
      set_fact:
        source_package_name: "{{ source_name }}"

    ############################################################################
    # This is only for chain builds - the other checks are done elsewhere
    - name: "Verify mock_chain is true with a list of stuff to build"
      assert:
        that:
          - mock_chain|bool
          - (srpm_url is defined or mock_chain_list is defined)
          - (srpm_url is iterable
            and (srpm_url is not string and srpm_url is not mapping))
            or (mock_chain_list is iterable
            and (mock_chain_list is not string and mock_chain_list is not mapping)
            and chain_git_url is defined)
        fail_msg: "srpm_url/mock_chain_list must be a list or chain_git_url is not defined"
        success_msg: "everything is in order"
      when:
        - mock_chain|bool
      tags:
        - mock
        - git_pull
        - srpm_pull

    - name: "Make mock_srpm_path a list"
      set_fact:
        mock_srpm_path: []
        mock_srpm_names: []
      when:
        - mock_chain|bool
      tags:
        - mock
        - git_pull
        - srpm_pull

    - name: "Loop through the RPM list for the chain"
      include_tasks: wrapper/chain/source_rpm.yml
      loop: "{{ srpm_url }}"
      loop_control:
        loop_var: "reg_item"
      when:
        - (mock_chain|bool and srpm_url is defined)
        - (srpm_url is iterable
          and (srpm_url is not string and srpm_url is not mapping))
      tags:
        - mock
        - srpm_pull

    - name: "Loop through the git list for the chain"
      include_tasks: wrapper/chain/git_rpm.yml
      loop: "{{ mock_chain_list }}"
      loop_control:
        loop_var: "reg_item"
      when:
        - mock_chain|bool
        - mock_chain_list is defined
        - chain_git_url is defined
      tags:
        - mock
        - srpm_pull
    # End chain setup
    ############################################################################

    - name: "Pull the source RPM data"
      include_tasks: wrapper/mock/srpmpull.yml
      when:
        - not mock_chain|bool
      tags:
        - mock
        - git_pull
        - srpm_pull

    - name: "Verify if the build or builds were ever done"
      include_tasks: wrapper/verify.yml
      tags:
        - mock
        - git_pull
        - srpm_pull

    - name: "Perform the build tasks"
      include_tasks: wrapper/mock/build.yml
      tags:
        - mock

    - name: "Transfer RPMs"
      include_tasks: wrapper/transfer.yml
      tags:
        - mock
        - transfer

    - name: "Import createrepo tasks"
      include_tasks: wrapper/repo/createrepo.yml
      when:
        - generate_repo|bool or bootstrap|bool
        - not scratch_build|bool
      tags:
        - mock
        - createrepo
  when:
    - not module_mode|bool

# Below is for module related builds
# These operations have been offloaded into module.yaml
- name: Module Build Block
  block:
    - name: Import Module Tasks
      include_tasks: module.yml
      tags:
        - mock
        - module
        - createrepo
  when:
    - module_mode|bool

# This performs the cleanup, regardless of build type
- name: "Cleanup"
  include_tasks: wrapper/mock/cleanup.yml
  tags:
    - mock
    - module
    - cleanup
...
