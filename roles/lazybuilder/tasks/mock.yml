---
# tasks for a mock build - only run under the mock tag
- name: "Import el{{ major }} vars and perform checks"
  include_tasks: wrapper/mock_vars.yml
  tags:
    - mock

- name: "Ensure that {{ mock_builder }} is setup properly"
  include_tasks: wrapper/mock_setup.yml
  tags:
    - mock
    - module

- name: Regular Build Block
  block:
    - name: "Set a new var for the source name"
      set_fact:
        source_package_name: "{{ source_name }}"

    - name: "Pull the source RPM data"
      include_tasks: wrapper/mock_srpmpull.yml
      when:
        - not mock_chain|bool
      tags:
        - mock
        - git_pull
        - srpm_pull

    - name: "Perform the build tasks"
      include_tasks: wrapper/mock_build.yml
      tags:
        - mock

    - name: "Transfer RPMs"
      include_tasks: wrapper/transfer.yml
      when: 'transfer_mode|bool'
      tags:
        - mock
        - transfer

    - name: "Import createrepo tasks"
      include_tasks: wrapper/createrepo.yml
      when: generate_repo|bool or bootstrap|bool
      tags:
        - mock
        - createrepo
  when:
    - not module_mode|bool

# This will need to be a loop - I basically want to avoid having to have an
# entirely different set of tasks (eg mock.yml vs module.yml) - This should
# make things a bit more compact at the tasks root.
# TODO: Some module tasks should be done locally to be able to do multi-arch
#       builds. The basic idea is that if a build is being done, all applicable
#       arches should be done at the same time, if at all possible. There should
#       be a var that defines this and some other magic.
- name: Module Build Block
  block:
    - name: "Set preliminary vars"
      set_fact:
        mock_srpm_path: []
        mock_rpm_build_order: []
        git_commit_hash: "{{ module_git_branch }}"
        artifacts:
          rpms: []
      tags:
        - mock
        - module

    - name: "Verify that the platform for the module matches"
      assert:
        that:
          - module_data.data.dependencies[0].buildrequires.platform[0] == dist
        fail_msg: "Platform mismatch"
        success_msg: "Platform matches"
      tags:
        - module

    - name: "Assign initial list of rpms that are implicit group 0"
      set_fact:
        mock_rpm_build_group_zero: "{{ module_data.data.components.rpms.items() | selectattr('1.buildorder', 'undefined') | list }}"
      tags:
        - mock
        - module

    - name: "Assign initial list of rpms with sorted groups"
      set_fact:
        mock_rpm_build_groups: "{{ module_data.data.components.rpms.items() | selectattr('1.buildorder', 'defined') | sort(attribute='1.buildorder') | list }}"
      tags:
        - mock
        - module

    - name: "Combine build order for module list"
      set_fact:
        mock_rpm_build_order: "{{ mock_rpm_build_group_zero + mock_rpm_build_groups }}"
      tags:
        - mock
        - module

    - name: "Loop through the RPM list for the module"
      include_tasks: wrapper/module_source_rpm.yml
      loop: "{{ mock_rpm_build_order }}"
      loop_control:
        loop_var: "mod_item"
      tags:
        - mock
        - module

    - name: "Perform the build tasks"
      include_tasks: wrapper/mock_build.yml
      tags:
        - mock
        - module

    - name: "Generate module documents"
      include_tasks: wrapper/module.yml
      tags:
        - module

    - name: "Transfer module RPMs"
      include_tasks: wrapper/module_transfer.yml
      tags:
        - mock
        - module
        - transfer

    - name: "Import createrepo tasks"
      include_tasks: wrapper/createrepo.yml
      tags:
        - mock
        - module
        - createrepo
  when:
    - module_mode|bool

- name: "Cleanup"
  include_tasks: wrapper/mock_cleanup.yml
  tags:
    - mock
    - module
    - cleanup
...
