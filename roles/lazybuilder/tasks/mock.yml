---
# tasks for a mock build - only run under the mock tag
- name: "Import el{{ major }} vars and perform checks"
  include_tasks: wrapper/mock_vars.yml
  tags:
    - mock

- name: "Ensure that {{ mock_builder }} is setup properly"
  include_tasks: wrapper/mock_setup.yml
  tags:
    - mock

- name: "Ensure that the constraint/bootstrap/module repo is setup"
  include_tasks: wrapper/mock_setup_solo_bootstrap.yml
  when:
    - (bootstrap|bool) or (sig_or_constraint|bool) or (module_mode|bool)
  tags:
    - mock
    - module

- name: Regular Build Block
  block:
    - name: "Set a new var for the source name"
      set_fact:
        source_package_name: "{{ source_name }}"

    - name: "Pull the source RPM data"
      include_tasks: wrapper/mock_srpmpull.yml
      tags:
        - mock
        - git_pull
        - srpm_pull

    - name: "Perform the build tasks"
      include_tasks: wrapper/mock_build.yml
      tags:
        - mock

    - name: "Transfer RPMs"
      include_tasks: wrapper/transfer.yml
      when: 'transfer_mode|bool'
      tags:
        - mock
        - transfer

    - name: "Import createrepo tasks"
      include_tasks: wrapper/createrepo.yml
      when: generate_repo|bool or bootstrap|bool
      tags:
        - mock
        - createrepo

    - name: "Cleanup"
      include_tasks: wrapper/mock_cleanup.yml
      tags:
        - mock
        - cleanup
  when:
    - not module_mode|bool

# This will need to be a loop - I basically want to avoid having to have an
# entirely different set of tasks (eg mock.yml vs module.yml) - This should
# make things a bit more compact at the tasks root.
# TODO: Some module tasks should be done locally to be able to do multi-arch
#       builds. The basic idea is that if a build is being done, all applicable
#       arches should be done at the same time, if at all possible. There should
#       be a var that defines this and some other magic.
- name: Module Build Block
  block:
    - name: Debug
      debug:
        msg: debug
  when:
    - module_mode|bool
...
